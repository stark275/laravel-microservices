version: '3'

networks:
  account_service:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "12080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - account_service

  mysql:
    image: mysql:5.7.22
    container_name: mysql_account_service
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - "12306:3306"
    environment:
      MYSQL_DATABASE: account_service
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - account_service

  pma2:
      depends_on:
       - mysql
      image: phpmyadmin/phpmyadmin
      container_name: pma2_account_service
      restart: always
      ports:
       - '12090:80'
      environment:
        PMA_HOST: mysql
      networks:
      - account_service
  
  # usage docker-compose run --rm php --version
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: php_account_service
    volumes:
      - ./src:/var/www/html
    ports:
      - "12000:9000"
    networks:
      - account_service

  # usage docker-compose run --rm composer dump-autoload -o
  composer:
    image: composer:latest
    container_name: composer_account_service
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - account_service
    
  # usage docker-compose run --rm artisan make:controller TestController
  artisan:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artisan_account_service
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['/var/www/html/artisan']
    networks:
      - account_service

  ###############################################################
  ################# Account service ##################

  ## docker ps -aq | xargs docker stop | xargs docker rm
## ~/.config/composer/vendor/bin

