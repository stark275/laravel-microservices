_format_version: "2.1"

services:

- name: test-server
  url: http://localhost:12080/api/test
  routes:
  - name: test
    paths:
    - /

- name: account-service
  url: http://localhost:12080/api/
  routes:
  - name: account
    paths:
    - /account

- name: product-service
  url: http://localhost:12082/api/
  routes:
  - name: products
    paths:
    - /products

- name: operation-service
  url: http://localhost:12081/api/
  routes:
  - name: operations
    paths:
    - /op

# consumers:
# - username: user

# basicauth_credentials:
# - consumer: user
#   username: Aladdin
#   password: OpenSesame

# keyauth_credentials:
# - consumer: user
#   key: abc

# acls:
# - consumer: user
#   group: group1

# plugins section
# plugins:

# - name: http-log
#   config: 
#     http_endpoint: http://172.29.241.32:8080/
#     method: POST
#     timeout: 1000
#     keepalive: 1000
#     flush_timeout: 2
#     retry_count: 15

# - name: file-log
#   config: 
#     path: /file.log
#     reopen: false

# - name: request-size-limiting
#   config: 
#     allowed_payload_size: 1
#     size_unit: kilobytes
#     require_content_length: false

# - name: request-termination
#   config: 
#     status_code: 403
# #    message: So long and thanks for all the fish!
#     body: "{a:b}"
#     content_type: "application/json; charset=utf-8"
#     trigger: "q"
#   enabled: false

# - name: acl
#   config: 
#     allow:
#     - group1
#     hide_groups_header: true
#   enabled: false

# - name: basic-auth
#   config: 
#     hide_credentials: true
#   enabled: false

# - name: key-auth
#   config: 
#     key_names:
#     - apikey
#     key_in_body: false
#     key_in_header: true
#     key_in_query: true
#     hide_credentials: false
#     run_on_preflight: true
#   enabled: false

# - name: proxy-cache
#   config: 
#     response_code:
#     - 200
#     request_method:
#     - GET
#     - HEAD
#     content_type:
#     - text/plain
#     - application/json
#     - application/json; charset=utf-8
#     cache_ttl: 300
#     strategy: memory
#   enabled: false

# - name: bot-detection
#   config:
#     deny:
#     - "(C|c)hrome"
#     - "curl"
#   enabled: false

# - name: cors
#   config:
#     origins:
#     - '*'
#     methods:
#     - GET
#     - POST
#     headers:
#     - Accept
#     - Accept-Version
#     - Content-Length
#     - Content-MD5
#     - Content-Type
#     - Date
#     - X-Auth-Token
#     - Authorization
#     exposed_headers:
#     - X-Auth-Token
#     credentials: true
#     max_age: 3600
#     preflight_continue: false

# - name: rate-limiting
#   config: 
# #    second: 5
#     hour: 100
#     policy: local
#     fault_tolerant: true
#     hide_client_headers: false
#     redis_ssl: false
#     redis_ssl_verify: false
# # comment these if you don't want to store rate limiting data in redis
# #    policy: redis
# #    redis_host: 172.27.59.36
# #    redis_password: example

# - name: ip-restriction
#   config: 
#     deny:
#     - 172.28.64.0/24
#     status: 401
#     message: cannot grant access